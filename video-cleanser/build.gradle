buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.boclips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.awaitility:awaitility:3.1.0'
    testCompile 'com.nhaarman:mockito-kotlin:1.5.0'
    testCompile 'com.h2database:h2'
    testCompile 'org.flywaydb:flyway-core'
    testCompile "com.github.tomakehurst:wiremock-standalone:2.18.0"
    testCompile 'com.mashape.unirest:unirest-java:1.4.9'
}

/**
 * Runs all tests, except contract tests
 */
test {
    filter {
        includeTestsMatching "*Test"
    }
    exclude 'com/boclips/contracts/**'
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "test"
}

/**
 * Verifies generated pacts against real services
 */
task testContracts(type: Test) {
    filter {
        includeTestsMatching "*ContractTest"
    }
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "staging"
}
