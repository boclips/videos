plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.41'
    id 'com.adarshr.test-logger' version '1.2.0'
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'com.boclips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

idea {
    module {
        testSourceDirs += file('src/client_test/kotlin')
        testResourceDirs += file('src/client_test/resources')
    }
}

sourceSets {
    client {
        java {
            srcDir 'src/client/java'
        }
    }

    client_test {
        kotlin {
            compileClasspath += client.output + main.output + test.output
            runtimeClasspath += client.output + main.output + test.output

            srcDir 'src/client_test/kotlin'
        }
        resources.srcDir file('src/client_test/resources')
    }

    youtubeContractTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/test_youtube_contract/kotlin'
        }
        resources.srcDir file('src/test_youtube_contract/resources')
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileYoutubeContractTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileClientKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileClient_testKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'http://repo.spring.io/libs-release/' }
    }
}

test {
    useJUnitPlatform()
}

task testYoutubeContract(type: Test) {
    testClassesDirs = sourceSets.youtubeContractTest.output.classesDirs
    classpath = sourceSets.youtubeContractTest.runtimeClasspath

    useJUnitPlatform()
}

task testClient(type: Test) {
    testClassesDirs = sourceSets.client_test.output.classesDirs
    classpath = sourceSets.client_test.runtimeClasspath

    useJUnitPlatform()
}

task buildClient(type: Jar) {
    from(sourceSets.client.runtimeClasspath) {
        include '**/*.class'
        include '**/*.jar'
    }

    archiveName("video-service-client-${version}.jar")
}

task sourcesJarClient(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.client.allSource
}

test.finalizedBy(testYoutubeContract)
test.finalizedBy(testClient)

ext["junit-jupiter.version"]  = "5.5.0"

dependencies {
    implementation project(':search-service')

    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-hateoas")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.cloud:spring-cloud-gcp-starter-pubsub")
    implementation("org.springframework.cloud:spring-cloud-gcp-pubsub-stream-binder")

    implementation("org.mongodb:mongo-java-driver:3.10.1")

    implementation("io.micrometer:micrometer-core")
    implementation("io.micrometer:micrometer-registry-prometheus")

    implementation('com.github.boclips:boclips-spring-web:0.64.0')
    implementation('com.github.boclips:boclips-spring-security:0.142.0')
    implementation("com.github.boclips:kaltura-client:0.65.0")
    implementation("com.github.boclips:events:0.73.0")

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8")
    implementation("io.github.microutils:kotlin-logging:1.4.9")
    implementation('org.simplejavamail:simple-java-mail:5.0.8')
    implementation('com.google.apis:google-api-services-youtube:v3-rev206-1.25.0')
    implementation('org.apache.commons:commons-lang3:3.7')
    implementation("org.bouncycastle:bcprov-jdk15on:1.60")
    implementation('org.litote.kmongo:kmongo:3.9.2')
    implementation('io.sentry:sentry-logback:1.7.21')
    implementation("com.fasterxml.jackson.core:jackson-databind:2.9.8") // vulnerability problem

    // repeated versions used in search service
    implementation('org.apache.solr:solr-solrj:7.7.1')
    implementation("org.elasticsearch:elasticsearch:6.5.4")
    implementation("org.elasticsearch.client:elasticsearch-rest-high-level-client:6.5.4")

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("org.springframework.cloud:spring-cloud-stream-test-support")
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    testImplementation("com.nhaarman:mockito-kotlin:1.5.0")
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation('org.mockito:mockito-junit-jupiter:2.23.0')
    testImplementation('org.yaml:snakeyaml:1.23')

    youtubeContractTestImplementation sourceSets.main.output

    youtubeContractTestImplementation configurations.compile
    youtubeContractTestImplementation configurations.testImplementation

    youtubeContractTestRuntime configurations.runtime
    youtubeContractTestRuntime configurations.testRuntime

    clientCompileOnly('org.projectlombok:lombok:1.18.4')
    clientApt('org.projectlombok:lombok:1.18.4')
    clientCompileOnly('org.springframework.security.oauth:spring-security-oauth2:2.1.4.RELEASE')
    clientCompileOnly("org.springframework.boot:spring-boot-starter-test")
    client_testImplementation('org.springframework.security.oauth:spring-security-oauth2:2.1.4.RELEASE')
    clientCompileOnly("org.springframework.boot:spring-boot-actuator")
    client_testImplementation("org.springframework.boot:spring-boot-actuator")

    testImplementation("com.github.tomakehurst:wiremock:2.19.0") {
        exclude group: 'junit', module: 'junit'
    }

    clientImplementation("com.damnhandy:handy-uri-templates:2.1.8")

    client_testImplementation sourceSets.main.output
    client_testImplementation sourceSets.test.output
    client_testImplementation sourceSets.client.output

    client_testImplementation configurations.compile
    client_testImplementation configurations.testImplementation
    client_testImplementation configurations.clientCompile
    client_testImplementation configurations.clientImplementation

    client_testRuntime configurations.runtime
    client_testRuntime configurations.testRuntime
    client_testRuntime configurations.clientRuntime
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

