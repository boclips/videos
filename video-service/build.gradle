buildscript {
    ext {
        kotlinVersion = '1.3.10'
        springBootVersion = '2.1.0.RELEASE'
        mysqlConnectorJavaVersion = '5.1.46'
        flapdoodleVersion = '2.0.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'com.adarshr.test-logger' version '1.2.0'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.boclips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

sourceSets {
    youtubeContractTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir 'src/test_youtube_contract/kotlin'
        }
        resources.srcDir file('src/test_youtube_contract/resources')
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileYoutubeContractTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

test {
    useJUnitPlatform()
}

task testYoutubeContract(type: Test) {
    testClassesDirs = sourceSets.youtubeContractTest.output.classesDirs
    classpath = sourceSets.youtubeContractTest.runtimeClasspath

    useJUnitPlatform()
}

test.finalizedBy(testYoutubeContract)

dependencies {
    compile project(':search-service')

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-aop")

    compile('com.github.knowledgemotion:boclips-spring-security:0.8.0')
    compile("com.github.knowledgemotion:kaltura-client:0.39.0")

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6")
    compile("io.github.microutils:kotlin-logging:1.4.9")
    compile("mysql:mysql-connector-java:${mysqlConnectorJavaVersion}")
    compile("org.flywaydb:flyway-core")
    compile('org.simplejavamail:simple-java-mail:5.0.8')
    compile('com.google.apis:google-api-services-youtube:v3-rev206-1.25.0')
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: ['junit', 'mockito-core']
    }
    testCompile("org.springframework.security:spring-security-test")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:${flapdoodleVersion}")
    testCompile("com.h2database:h2")
    testCompile("com.nhaarman:mockito-kotlin:1.5.0")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testCompile("org.junit.jupiter:junit-jupiter-engine")
    testCompile("org.junit.jupiter:junit-jupiter-params")
    testCompile('org.yaml:snakeyaml:1.23')

    youtubeContractTestCompile sourceSets.main.output

    youtubeContractTestCompile configurations.compile
    youtubeContractTestCompile configurations.testCompile

    youtubeContractTestRuntime configurations.runtime
    youtubeContractTestRuntime configurations.testRuntime
}
