package com.boclips.videos.service.application.video

import com.boclips.events.types.AnalysedVideo
import com.boclips.events.types.Captions
import com.boclips.events.types.CaptionsFormat.VTT
import com.boclips.videos.service.domain.model.playback.PlaybackId
import com.boclips.videos.service.domain.model.playback.PlaybackProviderType
import com.boclips.videos.service.testsupport.AbstractSpringIntegrationTest
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test
import org.springframework.messaging.support.MessageBuilder

class UpdateAnalysedVideoIntegrationTest : AbstractSpringIntegrationTest() {

    @Test
    fun `uploads captions to Kaltura`() {
        val assetId = saveVideo(playbackId = PlaybackId(type = PlaybackProviderType.KALTURA, value = "reference-id"))

        val captions = Captions.builder()
                .content("the captions")
                .autoGenerated(true)
                .format(VTT)
                .language("en-US")
                .build()
        val analysedVideo = AnalysedVideo.builder()
                .videoId(assetId.value)
                .language("en-US")
                .topics(emptyList())
                .keywords(emptyList())
                .transcript("")
                .captions(captions)
                .build()

        subscriptions.analysedVideos().send(MessageBuilder.withPayload(analysedVideo).build())

        assertThat(fakeKalturaClient.getCaptionFilesByReferenceId("reference-id")).isNotEmpty
    }
}
