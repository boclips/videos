package com.boclips.videos.service.infrastructure.playback

import com.boclips.events.types.Captions
import com.boclips.events.types.CaptionsFormat
import com.boclips.kalturaclient.captionasset.CaptionAsset
import com.boclips.kalturaclient.captionasset.CaptionFormat
import com.boclips.kalturaclient.captionasset.KalturaLanguage
import java.util.Locale

object CaptionAssetConverter {

    fun getCaptionAsset(captions: Captions): CaptionAsset {
        val language = captions.language.getDisplayLanguage(Locale.ENGLISH)
        return CaptionAsset.builder()
            .fileType(getCaptionFileType(captions.format))
            .label(getLabel(language, captions.autoGenerated))
            .language(KalturaLanguage.fromName(language))
            .build()
    }

    private fun getLabel(language: String, autoGenerated: Boolean): String {
        if (autoGenerated) {
            return "$language (auto-generated)"
        }

        return language
    }

    private fun getCaptionFileType(format: CaptionsFormat): CaptionFormat {
        return when (format) {
            CaptionsFormat.VTT -> CaptionFormat.WEBVTT
        }
    }
}
